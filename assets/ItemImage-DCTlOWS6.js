import{I as C,t as I,C as B,g as f,h as L}from"./index-NiKFLU5t.js";class k extends B{constructor(e){super(e)}get aspectRatio(){return this.item.settings.isStereo?this.pageWidth/2/this.pageHeight:this.pageWidth/this.pageHeight}calcRow(e,r,c){const s=c/this.aspectRatio+f.chunkGap;return r.push({offset:e,height:s,lines:[{idx:0,chunkPos:0,chunk:this,text:""}],lineHeight:s}),s}component({lines:e,width:r,columnIdx:c},s){const l={backgroundRepeat:"no-repeat",height:s.height-f.chunkGap+"px",backgroundImage:`url(${this.url})`,backgroundSize:"cover",backgroundPosition:(this.item.settings.isStereo&&c?"right":"left")+" center"};return[L("div",{idx:e?.[0],style:l})]}}const v=new Set(["fontSize","readingProgress","fontWeight","alternateCharOpacity"]);class P extends C{iconColor="#FFC22B";icon="image";get settingsToStore(){return["width","gap","noStereo","showLineNumbers"]}get recalcProps(){return[this.settings.isStereo]}supports(e){return!v.has(e)}constructor(){super();const e=["length"];for(const r of e)Object.defineProperty(this,r,{writable:!0,configurable:!1,enumerable:!1,value:this[r]})}async parseInfo(){this.thumbnailUrl=await T(this.data,this.mimeType,100,100)}async parseData(){const e=I(this),r=new Blob([e.data],{type:e.mimeType}),c=await createImageBitmap(r);return e._chunks.push(new k({blob:r,bitmap:c,url:URL.createObjectURL(r),offset:0,idx:e._chunks.length,pageIdx:0,pageWidth:c.width,pageHeight:c.height,item:e})),Object.assign(e,{length:1}),this}get chunks(){return this._chunks}}async function T(u,e,r,c){const s=await l(u,e);try{const{width:t,height:n}=s;if(t===0||n===0)throw new Error("Decoded image has zero dimensions.");const o=Math.min(r/t,c/n),a=Math.max(1,Math.round(t*o)),g=Math.max(1,Math.round(n*o)),{canvas:h,ctx:i}=p(a,g);return i.imageSmoothingEnabled=!0,i.imageSmoothingQuality="high",i.clearRect(0,0,a,g),i.drawImage(s,0,0,a,g),await b(h)}finally{try{typeof s.close=="function"&&s.close()}catch{}}async function l(t,n){const o=new Blob([t],{type:n});return typeof createImageBitmap=="function"?await createImageBitmap(o):await new Promise((a,g)=>{const h=URL.createObjectURL(o),i=new Image;i.onload=async()=>{try{const{canvas:m,ctx:x}=p(i.naturalWidth,i.naturalHeight);x.drawImage(i,0,0),URL.revokeObjectURL(h);const R=await w(m);a(R)}catch(m){g(m)}},i.onerror=()=>{URL.revokeObjectURL(h),g(new Error("Failed to decode image."))},i.src=h})}function p(t,n){if(typeof OffscreenCanvas<"u"){const g=new OffscreenCanvas(t,n),h=g.getContext("2d");if(!h)throw new Error("Could not get 2D context.");return{canvas:g,ctx:h}}const o=document.createElement("canvas");o.width=t,o.height=n;const a=o.getContext("2d");if(!a)throw new Error("Could not get 2D context.");return{canvas:o,ctx:a}}async function w(t){if("transferToImageBitmap"in t&&typeof t.transferToImageBitmap=="function")return t.transferToImageBitmap();const n=await d(t);return await createImageBitmap(n)}async function d(t){return"convertToBlob"in t&&typeof t.convertToBlob=="function"?await t.convertToBlob({type:"image/png"}):await new Promise((n,o)=>{t.toBlob(a=>{if(!a){o(new Error("Canvas toBlob failed."));return}n(a)},"image/png")})}async function b(t){if(typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement)return t.toDataURL("image/png");const n=await d(t);return await y(n)}function y(t){return new Promise((n,o)=>{const a=new FileReader;a.onload=()=>n(String(a.result)),a.onerror=()=>o(new Error("Failed to read blob as data URL.")),a.readAsDataURL(t)})}}export{P as ItemImage,P as default,T as scaleImageToPngDataURL};
